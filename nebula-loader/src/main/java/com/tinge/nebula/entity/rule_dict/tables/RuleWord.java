/*
 * This file is generated by jOOQ.
 */
package com.tinge.nebula.entity.rule_dict.tables;


import com.tinge.nebula.entity.rule_dict.Indexes;
import com.tinge.nebula.entity.rule_dict.Keys;
import com.tinge.nebula.entity.rule_dict.RuleDict;
import com.tinge.nebula.entity.rule_dict.tables.records.RuleWordRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RuleWord extends TableImpl<RuleWordRecord> {

    private static final long serialVersionUID = 3891151;

    /**
     * The reference instance of <code>rule_dict.rule_word</code>
     */
    public static final RuleWord RULE_WORD = new RuleWord();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RuleWordRecord> getRecordType() {
        return RuleWordRecord.class;
    }

    /**
     * The column <code>rule_dict.rule_word.id</code>.
     */
    public final TableField<RuleWordRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>rule_dict.rule_word.source</code>.
     */
    public final TableField<RuleWordRecord, Integer> SOURCE = createField("source", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("'-1'", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>rule_dict.rule_word.operator_id</code>.
     */
    public final TableField<RuleWordRecord, Long> OPERATOR_ID = createField("operator_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("'-1'", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>rule_dict.rule_word.word</code>.
     */
    public final TableField<RuleWordRecord, String> WORD = createField("word", org.jooq.impl.SQLDataType.VARCHAR(1024).nullable(false).defaultValue(org.jooq.impl.DSL.field("''", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rule_dict.rule_word.word_type</code>.
     */
    public final TableField<RuleWordRecord, Integer> WORD_TYPE = createField("word_type", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>rule_dict.rule_word.match_type</code>.
     */
    public final TableField<RuleWordRecord, Integer> MATCH_TYPE = createField("match_type", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("'-1'", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>rule_dict.rule_word.entity_type</code>.
     */
    public final TableField<RuleWordRecord, Integer> ENTITY_TYPE = createField("entity_type", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("'-1'", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>rule_dict.rule_word.exclude_words</code>.
     */
    public final TableField<RuleWordRecord, String> EXCLUDE_WORDS = createField("exclude_words", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>rule_dict.rule_word.exclude_users</code>.
     */
    public final TableField<RuleWordRecord, String> EXCLUDE_USERS = createField("exclude_users", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>rule_dict.rule_word.exclude_customers</code>.
     */
    public final TableField<RuleWordRecord, String> EXCLUDE_CUSTOMERS = createField("exclude_customers", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>rule_dict.rule_word.industries</code>.
     */
    public final TableField<RuleWordRecord, String> INDUSTRIES = createField("industries", org.jooq.impl.SQLDataType.VARCHAR(1024).nullable(false).defaultValue(org.jooq.impl.DSL.field("'0'", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rule_dict.rule_word.grade</code>.
     */
    public final TableField<RuleWordRecord, Integer> GRADE = createField("grade", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("1", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>rule_dict.rule_word.status</code>.
     */
    public final TableField<RuleWordRecord, Integer> STATUS = createField("status", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("'1'", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>rule_dict.rule_word.remark</code>.
     */
    public final TableField<RuleWordRecord, String> REMARK = createField("remark", org.jooq.impl.SQLDataType.VARCHAR(1024).nullable(false).defaultValue(org.jooq.impl.DSL.field("''", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rule_dict.rule_word.risk_tag</code>.
     */
    public final TableField<RuleWordRecord, String> RISK_TAG = createField("risk_tag", org.jooq.impl.SQLDataType.VARCHAR(1024).nullable(false).defaultValue(org.jooq.impl.DSL.field("''", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rule_dict.rule_word.extra_data</code>.
     */
    public final TableField<RuleWordRecord, String> EXTRA_DATA = createField("extra_data", org.jooq.impl.SQLDataType.VARCHAR(1024).nullable(false).defaultValue(org.jooq.impl.DSL.field("''", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rule_dict.rule_word.create_time</code>.
     */
    public final TableField<RuleWordRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.precision(6).nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP()", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>rule_dict.rule_word.modify_time</code>.
     */
    public final TableField<RuleWordRecord, Timestamp> MODIFY_TIME = createField("modify_time", org.jooq.impl.SQLDataType.TIMESTAMP.precision(6).nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP()", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>rule_dict.rule_word</code> table reference
     */
    public RuleWord() {
        this(DSL.name("rule_word"), null);
    }

    /**
     * Create an aliased <code>rule_dict.rule_word</code> table reference
     */
    public RuleWord(String alias) {
        this(DSL.name(alias), RULE_WORD);
    }

    /**
     * Create an aliased <code>rule_dict.rule_word</code> table reference
     */
    public RuleWord(Name alias) {
        this(alias, RULE_WORD);
    }

    private RuleWord(Name alias, Table<RuleWordRecord> aliased) {
        this(alias, aliased, null);
    }

    private RuleWord(Name alias, Table<RuleWordRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> RuleWord(Table<O> child, ForeignKey<O, RuleWordRecord> key) {
        super(child, key, RULE_WORD);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return RuleDict.RULE_DICT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PRIMARY_KEY_8);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<RuleWordRecord, Long> getIdentity() {
        return Keys.IDENTITY_RULE_WORD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RuleWordRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_8;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RuleWordRecord>> getKeys() {
        return Arrays.<UniqueKey<RuleWordRecord>>asList(Keys.CONSTRAINT_8);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RuleWord as(String alias) {
        return new RuleWord(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RuleWord as(Name alias) {
        return new RuleWord(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RuleWord rename(String name) {
        return new RuleWord(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RuleWord rename(Name name) {
        return new RuleWord(name, null);
    }
}
